{"ast":null,"code":"(function () {\n  // This is for grouping buttons into a bar\n  // takes an array of `L.easyButton`s and\n  // then the usual `.addTo(map)`\n  L.Control.EasyBar = L.Control.extend({\n    options: {\n      position: 'topleft',\n      // part of leaflet's defaults\n      id: null,\n      // an id to tag the Bar with\n      leafletClasses: true // use leaflet classes?\n\n    },\n    initialize: function (buttons, options) {\n      if (options) {\n        L.Util.setOptions(this, options);\n      }\n\n      this._buildContainer();\n\n      this._buttons = [];\n\n      for (var i = 0; i < buttons.length; i++) {\n        buttons[i]._bar = this;\n        buttons[i]._container = buttons[i].button;\n\n        this._buttons.push(buttons[i]);\n\n        this.container.appendChild(buttons[i].button);\n      }\n    },\n    _buildContainer: function () {\n      this._container = this.container = L.DomUtil.create('div', '');\n      this.options.leafletClasses && L.DomUtil.addClass(this.container, 'leaflet-bar easy-button-container leaflet-control');\n      this.options.id && (this.container.id = this.options.id);\n    },\n    enable: function () {\n      L.DomUtil.addClass(this.container, 'enabled');\n      L.DomUtil.removeClass(this.container, 'disabled');\n      this.container.setAttribute('aria-hidden', 'false');\n      return this;\n    },\n    disable: function () {\n      L.DomUtil.addClass(this.container, 'disabled');\n      L.DomUtil.removeClass(this.container, 'enabled');\n      this.container.setAttribute('aria-hidden', 'true');\n      return this;\n    },\n    onAdd: function () {\n      return this.container;\n    },\n    addTo: function (map) {\n      this._map = map;\n\n      for (var i = 0; i < this._buttons.length; i++) {\n        this._buttons[i]._map = map;\n      }\n\n      var container = this._container = this.onAdd(map),\n          pos = this.getPosition(),\n          corner = map._controlCorners[pos];\n      L.DomUtil.addClass(container, 'leaflet-control');\n\n      if (pos.indexOf('bottom') !== -1) {\n        corner.insertBefore(container, corner.firstChild);\n      } else {\n        corner.appendChild(container);\n      }\n\n      return this;\n    }\n  });\n\n  L.easyBar = function () {\n    var args = [L.Control.EasyBar];\n\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    return new (Function.prototype.bind.apply(L.Control.EasyBar, args))();\n  }; // L.EasyButton is the actual buttons\n  // can be called without being grouped into a bar\n\n\n  L.Control.EasyButton = L.Control.extend({\n    options: {\n      position: 'topleft',\n      // part of leaflet's defaults\n      id: null,\n      // an id to tag the button with\n      type: 'replace',\n      // [(replace|animate)]\n      // replace swaps out elements\n      // animate changes classes with all elements inserted\n      states: [],\n      // state names look like this\n      // {\n      //   stateName: 'untracked',\n      //   onClick: function(){ handle_nav_manually(); };\n      //   title: 'click to make inactive',\n      //   icon: 'fa-circle',    // wrapped with <a>\n      // }\n      leafletClasses: true,\n      // use leaflet styles for the button\n      tagName: 'button'\n    },\n    initialize: function (icon, onClick, title, id) {\n      // clear the states manually\n      this.options.states = []; // add id to options\n\n      if (id != null) {\n        this.options.id = id;\n      } // storage between state functions\n\n\n      this.storage = {}; // is the last item an object?\n\n      if (typeof arguments[arguments.length - 1] === 'object') {\n        // if so, it should be the options\n        L.Util.setOptions(this, arguments[arguments.length - 1]);\n      } // if there aren't any states in options\n      // use the early params\n\n\n      if (this.options.states.length === 0 && typeof icon === 'string' && typeof onClick === 'function') {\n        // turn the options object into a state\n        this.options.states.push({\n          icon: icon,\n          onClick: onClick,\n          title: typeof title === 'string' ? title : ''\n        });\n      } // curate and move user's states into\n      // the _states for internal use\n\n\n      this._states = [];\n\n      for (var i = 0; i < this.options.states.length; i++) {\n        this._states.push(new State(this.options.states[i], this));\n      }\n\n      this._buildButton();\n\n      this._activateState(this._states[0]);\n    },\n    _buildButton: function () {\n      this.button = L.DomUtil.create(this.options.tagName, '');\n\n      if (this.options.tagName === 'button') {\n        this.button.setAttribute('type', 'button');\n      }\n\n      if (this.options.id) {\n        this.button.id = this.options.id;\n      }\n\n      if (this.options.leafletClasses) {\n        L.DomUtil.addClass(this.button, 'easy-button-button leaflet-bar-part leaflet-interactive');\n      } // don't let double clicks and mousedown get to the map\n\n\n      L.DomEvent.addListener(this.button, 'dblclick', L.DomEvent.stop);\n      L.DomEvent.addListener(this.button, 'mousedown', L.DomEvent.stop);\n      L.DomEvent.addListener(this.button, 'mouseup', L.DomEvent.stop); // take care of normal clicks\n\n      L.DomEvent.addListener(this.button, 'click', function (e) {\n        L.DomEvent.stop(e);\n\n        this._currentState.onClick(this, this._map ? this._map : null);\n\n        this._map && this._map.getContainer().focus();\n      }, this); // prep the contents of the control\n\n      if (this.options.type == 'replace') {\n        this.button.appendChild(this._currentState.icon);\n      } else {\n        for (var i = 0; i < this._states.length; i++) {\n          this.button.appendChild(this._states[i].icon);\n        }\n      }\n    },\n    _currentState: {\n      // placeholder content\n      stateName: 'unnamed',\n      icon: function () {\n        return document.createElement('span');\n      }()\n    },\n    _states: null,\n    // populated on init\n    state: function (newState) {\n      // when called with no args, it's a getter\n      if (arguments.length === 0) {\n        return this._currentState.stateName;\n      } // activate by name\n\n\n      if (typeof newState == 'string') {\n        this._activateStateNamed(newState); // activate by index\n\n      } else if (typeof newState == 'number') {\n        this._activateState(this._states[newState]);\n      }\n\n      return this;\n    },\n    _activateStateNamed: function (stateName) {\n      for (var i = 0; i < this._states.length; i++) {\n        if (this._states[i].stateName == stateName) {\n          this._activateState(this._states[i]);\n        }\n      }\n    },\n    _activateState: function (newState) {\n      if (newState === this._currentState) {\n        // don't touch the dom if it'll just be the same after\n        return;\n      } else {\n        // swap out elements... if you're into that kind of thing\n        if (this.options.type == 'replace') {\n          this.button.appendChild(newState.icon);\n          this.button.removeChild(this._currentState.icon);\n        }\n\n        if (newState.title) {\n          this.button.title = newState.title;\n        } else {\n          this.button.removeAttribute('title');\n        } // update classes for animations\n\n\n        for (var i = 0; i < this._states.length; i++) {\n          L.DomUtil.removeClass(this._states[i].icon, this._currentState.stateName + '-active');\n          L.DomUtil.addClass(this._states[i].icon, newState.stateName + '-active');\n        } // update classes for animations\n\n\n        L.DomUtil.removeClass(this.button, this._currentState.stateName + '-active');\n        L.DomUtil.addClass(this.button, newState.stateName + '-active'); // update the record\n\n        this._currentState = newState;\n      }\n    },\n    enable: function () {\n      L.DomUtil.addClass(this.button, 'enabled');\n      L.DomUtil.removeClass(this.button, 'disabled');\n      this.button.setAttribute('aria-hidden', 'false');\n      return this;\n    },\n    disable: function () {\n      L.DomUtil.addClass(this.button, 'disabled');\n      L.DomUtil.removeClass(this.button, 'enabled');\n      this.button.setAttribute('aria-hidden', 'true');\n      return this;\n    },\n    onAdd: function (map) {\n      var bar = L.easyBar([this], {\n        position: this.options.position,\n        leafletClasses: this.options.leafletClasses\n      });\n      this._anonymousBar = bar;\n      this._container = bar.container;\n      return this._anonymousBar.container;\n    },\n    removeFrom: function (map) {\n      if (this._map === map) this.remove();\n      return this;\n    }\n  });\n\n  L.easyButton = function ()\n  /* args will pass automatically */\n  {\n    var args = Array.prototype.concat.apply([L.Control.EasyButton], arguments);\n    return new (Function.prototype.bind.apply(L.Control.EasyButton, args))();\n  };\n  /*************************\n   *\n   * util functions\n   *\n   *************************/\n  // constructor for states so only curated\n  // states end up getting called\n\n\n  function State(template, easyButton) {\n    this.title = template.title;\n    this.stateName = template.stateName ? template.stateName : 'unnamed-state'; // build the wrapper\n\n    this.icon = L.DomUtil.create('span', '');\n    L.DomUtil.addClass(this.icon, 'button-state state-' + this.stateName.replace(/(^\\s*|\\s*$)/g, ''));\n    this.icon.innerHTML = buildIcon(template.icon);\n    this.onClick = L.Util.bind(template.onClick ? template.onClick : function () {}, easyButton);\n  }\n\n  function buildIcon(ambiguousIconString) {\n    var tmpIcon; // does this look like html? (i.e. not a class)\n\n    if (ambiguousIconString.match(/[&;=<>\"']/)) {\n      // if so, the user should have put in html\n      // so move forward as such\n      tmpIcon = ambiguousIconString; // then it wasn't html, so\n      // it's a class list, figure out what kind\n    } else {\n      ambiguousIconString = ambiguousIconString.replace(/(^\\s*|\\s*$)/g, '');\n      tmpIcon = L.DomUtil.create('span', '');\n\n      if (ambiguousIconString.indexOf('fa-') === 0) {\n        L.DomUtil.addClass(tmpIcon, 'fa ' + ambiguousIconString);\n      } else if (ambiguousIconString.indexOf('glyphicon-') === 0) {\n        L.DomUtil.addClass(tmpIcon, 'glyphicon ' + ambiguousIconString);\n      } else {\n        L.DomUtil.addClass(tmpIcon,\n        /*rollwithit*/\n        ambiguousIconString);\n      } // make this a string so that it's easy to set innerHTML below\n\n\n      tmpIcon = tmpIcon.outerHTML;\n    }\n\n    return tmpIcon;\n  }\n})();","map":{"version":3,"sources":["/home/paulo/Projetos/maps/frontend/node_modules/leaflet-easybutton/src/easy-button.js"],"names":["L","Control","EasyBar","extend","options","position","id","leafletClasses","initialize","buttons","Util","setOptions","_buildContainer","_buttons","i","length","_bar","_container","button","push","container","appendChild","DomUtil","create","addClass","enable","removeClass","setAttribute","disable","onAdd","addTo","map","_map","pos","getPosition","corner","_controlCorners","indexOf","insertBefore","firstChild","easyBar","args","arguments","Function","prototype","bind","apply","EasyButton","type","states","tagName","icon","onClick","title","storage","_states","State","_buildButton","_activateState","DomEvent","addListener","stop","e","_currentState","getContainer","focus","stateName","document","createElement","state","newState","_activateStateNamed","removeChild","removeAttribute","bar","_anonymousBar","removeFrom","remove","easyButton","Array","concat","template","replace","innerHTML","buildIcon","ambiguousIconString","tmpIcon","match","outerHTML"],"mappings":"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","sourcesContent":["(function(){\n\n// This is for grouping buttons into a bar\n// takes an array of `L.easyButton`s and\n// then the usual `.addTo(map)`\nL.Control.EasyBar = L.Control.extend({\n\n  options: {\n    position:       'topleft',  // part of leaflet's defaults\n    id:             null,       // an id to tag the Bar with\n    leafletClasses: true        // use leaflet classes?\n  },\n\n\n  initialize: function(buttons, options){\n\n    if(options){\n      L.Util.setOptions( this, options );\n    }\n\n    this._buildContainer();\n    this._buttons = [];\n\n    for(var i = 0; i < buttons.length; i++){\n      buttons[i]._bar = this;\n      buttons[i]._container = buttons[i].button;\n      this._buttons.push(buttons[i]);\n      this.container.appendChild(buttons[i].button);\n    }\n\n  },\n\n\n  _buildContainer: function(){\n    this._container = this.container = L.DomUtil.create('div', '');\n    this.options.leafletClasses && L.DomUtil.addClass(this.container, 'leaflet-bar easy-button-container leaflet-control');\n    this.options.id && (this.container.id = this.options.id);\n  },\n\n\n  enable: function(){\n    L.DomUtil.addClass(this.container, 'enabled');\n    L.DomUtil.removeClass(this.container, 'disabled');\n    this.container.setAttribute('aria-hidden', 'false');\n    return this;\n  },\n\n\n  disable: function(){\n    L.DomUtil.addClass(this.container, 'disabled');\n    L.DomUtil.removeClass(this.container, 'enabled');\n    this.container.setAttribute('aria-hidden', 'true');\n    return this;\n  },\n\n\n  onAdd: function () {\n    return this.container;\n  },\n\n  addTo: function (map) {\n    this._map = map;\n\n    for(var i = 0; i < this._buttons.length; i++){\n      this._buttons[i]._map = map;\n    }\n\n    var container = this._container = this.onAdd(map),\n        pos = this.getPosition(),\n        corner = map._controlCorners[pos];\n\n    L.DomUtil.addClass(container, 'leaflet-control');\n\n    if (pos.indexOf('bottom') !== -1) {\n      corner.insertBefore(container, corner.firstChild);\n    } else {\n      corner.appendChild(container);\n    }\n\n    return this;\n  }\n\n});\n\nL.easyBar = function(){\n  var args = [L.Control.EasyBar];\n  for(var i = 0; i < arguments.length; i++){\n    args.push( arguments[i] );\n  }\n  return new (Function.prototype.bind.apply(L.Control.EasyBar, args));\n};\n\n// L.EasyButton is the actual buttons\n// can be called without being grouped into a bar\nL.Control.EasyButton = L.Control.extend({\n\n  options: {\n    position:  'topleft',       // part of leaflet's defaults\n\n    id:        null,            // an id to tag the button with\n\n    type:      'replace',       // [(replace|animate)]\n                                // replace swaps out elements\n                                // animate changes classes with all elements inserted\n\n    states:    [],              // state names look like this\n                                // {\n                                //   stateName: 'untracked',\n                                //   onClick: function(){ handle_nav_manually(); };\n                                //   title: 'click to make inactive',\n                                //   icon: 'fa-circle',    // wrapped with <a>\n                                // }\n\n    leafletClasses:   true,     // use leaflet styles for the button\n    tagName:          'button',\n  },\n\n\n\n  initialize: function(icon, onClick, title, id){\n\n    // clear the states manually\n    this.options.states = [];\n\n    // add id to options\n    if(id != null){\n      this.options.id = id;\n    }\n\n    // storage between state functions\n    this.storage = {};\n\n    // is the last item an object?\n    if( typeof arguments[arguments.length-1] === 'object' ){\n\n      // if so, it should be the options\n      L.Util.setOptions( this, arguments[arguments.length-1] );\n    }\n\n    // if there aren't any states in options\n    // use the early params\n    if( this.options.states.length === 0 &&\n        typeof icon  === 'string' &&\n        typeof onClick === 'function'){\n\n      // turn the options object into a state\n      this.options.states.push({\n        icon: icon,\n        onClick: onClick,\n        title: typeof title === 'string' ? title : ''\n      });\n    }\n\n    // curate and move user's states into\n    // the _states for internal use\n    this._states = [];\n\n    for(var i = 0; i < this.options.states.length; i++){\n      this._states.push( new State(this.options.states[i], this) );\n    }\n\n    this._buildButton();\n\n    this._activateState(this._states[0]);\n\n  },\n\n  _buildButton: function(){\n\n    this.button = L.DomUtil.create(this.options.tagName, '');\n\n    if (this.options.tagName === 'button') {\n        this.button.setAttribute('type', 'button');\n    }\n\n    if (this.options.id ){\n      this.button.id = this.options.id;\n    }\n\n    if (this.options.leafletClasses){\n      L.DomUtil.addClass(this.button, 'easy-button-button leaflet-bar-part leaflet-interactive');\n    }\n\n    // don't let double clicks and mousedown get to the map\n    L.DomEvent.addListener(this.button, 'dblclick', L.DomEvent.stop);\n    L.DomEvent.addListener(this.button, 'mousedown', L.DomEvent.stop);\n    L.DomEvent.addListener(this.button, 'mouseup', L.DomEvent.stop);\n\n    // take care of normal clicks\n    L.DomEvent.addListener(this.button,'click', function(e){\n      L.DomEvent.stop(e);\n      this._currentState.onClick(this, this._map ? this._map : null );\n      this._map && this._map.getContainer().focus();\n    }, this);\n\n    // prep the contents of the control\n    if(this.options.type == 'replace'){\n      this.button.appendChild(this._currentState.icon);\n    } else {\n      for(var i=0;i<this._states.length;i++){\n        this.button.appendChild(this._states[i].icon);\n      }\n    }\n  },\n\n\n  _currentState: {\n    // placeholder content\n    stateName: 'unnamed',\n    icon: (function(){ return document.createElement('span'); })()\n  },\n\n\n\n  _states: null, // populated on init\n\n\n\n  state: function(newState){\n\n    // when called with no args, it's a getter\n    if (arguments.length === 0) {\n      return this._currentState.stateName;\n    }\n\n    // activate by name\n    if(typeof newState == 'string'){\n\n      this._activateStateNamed(newState);\n\n    // activate by index\n    } else if (typeof newState == 'number'){\n\n      this._activateState(this._states[newState]);\n    }\n\n    return this;\n  },\n\n\n  _activateStateNamed: function(stateName){\n    for(var i = 0; i < this._states.length; i++){\n      if( this._states[i].stateName == stateName ){\n        this._activateState( this._states[i] );\n      }\n    }\n  },\n\n  _activateState: function(newState){\n\n    if( newState === this._currentState ){\n\n      // don't touch the dom if it'll just be the same after\n      return;\n\n    } else {\n\n      // swap out elements... if you're into that kind of thing\n      if( this.options.type == 'replace' ){\n        this.button.appendChild(newState.icon);\n        this.button.removeChild(this._currentState.icon);\n      }\n\n      if( newState.title ){\n        this.button.title = newState.title;\n      } else {\n        this.button.removeAttribute('title');\n      }\n\n      // update classes for animations\n      for(var i=0;i<this._states.length;i++){\n        L.DomUtil.removeClass(this._states[i].icon, this._currentState.stateName + '-active');\n        L.DomUtil.addClass(this._states[i].icon, newState.stateName + '-active');\n      }\n\n      // update classes for animations\n      L.DomUtil.removeClass(this.button, this._currentState.stateName + '-active');\n      L.DomUtil.addClass(this.button, newState.stateName + '-active');\n\n      // update the record\n      this._currentState = newState;\n\n    }\n  },\n\n  enable: function(){\n    L.DomUtil.addClass(this.button, 'enabled');\n    L.DomUtil.removeClass(this.button, 'disabled');\n    this.button.setAttribute('aria-hidden', 'false');\n    return this;\n  },\n\n  disable: function(){\n    L.DomUtil.addClass(this.button, 'disabled');\n    L.DomUtil.removeClass(this.button, 'enabled');\n    this.button.setAttribute('aria-hidden', 'true');\n    return this;\n  },\n\n  onAdd: function(map){\n    var bar = L.easyBar([this], {\n      position: this.options.position,\n      leafletClasses: this.options.leafletClasses\n    });\n    this._anonymousBar = bar;\n    this._container = bar.container;\n    return this._anonymousBar.container;\n  },\n\n  removeFrom: function (map) {\n    if (this._map === map)\n      this.remove();\n    return this;\n  },\n\n});\n\nL.easyButton = function(/* args will pass automatically */){\n  var args = Array.prototype.concat.apply([L.Control.EasyButton],arguments);\n  return new (Function.prototype.bind.apply(L.Control.EasyButton, args));\n};\n\n/*************************\n *\n * util functions\n *\n *************************/\n\n// constructor for states so only curated\n// states end up getting called\nfunction State(template, easyButton){\n\n  this.title = template.title;\n  this.stateName = template.stateName ? template.stateName : 'unnamed-state';\n\n  // build the wrapper\n  this.icon = L.DomUtil.create('span', '');\n\n  L.DomUtil.addClass(this.icon, 'button-state state-' + this.stateName.replace(/(^\\s*|\\s*$)/g,''));\n  this.icon.innerHTML = buildIcon(template.icon);\n  this.onClick = L.Util.bind(template.onClick?template.onClick:function(){}, easyButton);\n}\n\nfunction buildIcon(ambiguousIconString) {\n\n  var tmpIcon;\n\n  // does this look like html? (i.e. not a class)\n  if( ambiguousIconString.match(/[&;=<>\"']/) ){\n\n    // if so, the user should have put in html\n    // so move forward as such\n    tmpIcon = ambiguousIconString;\n\n  // then it wasn't html, so\n  // it's a class list, figure out what kind\n  } else {\n      ambiguousIconString = ambiguousIconString.replace(/(^\\s*|\\s*$)/g,'');\n      tmpIcon = L.DomUtil.create('span', '');\n\n      if( ambiguousIconString.indexOf('fa-') === 0 ){\n        L.DomUtil.addClass(tmpIcon, 'fa '  + ambiguousIconString)\n      } else if ( ambiguousIconString.indexOf('glyphicon-') === 0 ) {\n        L.DomUtil.addClass(tmpIcon, 'glyphicon ' + ambiguousIconString)\n      } else {\n        L.DomUtil.addClass(tmpIcon, /*rollwithit*/ ambiguousIconString)\n      }\n\n      // make this a string so that it's easy to set innerHTML below\n      tmpIcon = tmpIcon.outerHTML;\n  }\n\n  return tmpIcon;\n}\n\n})();\n"]},"metadata":{},"sourceType":"script"}