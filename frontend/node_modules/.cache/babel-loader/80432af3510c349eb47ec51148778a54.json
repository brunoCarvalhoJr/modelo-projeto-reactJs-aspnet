{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/paulo/Projetos/maps/frontend/src/pages/mapa/components/tools/ToolBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button } from 'antd';\nimport L from 'leaflet';\nimport { Context } from '../../Context';\nimport './toolsConfig';\nimport { ESTILO_TALHAO } from '../../Constants';\nimport iconPadrao from 'assets/markers/algae.png';\n\nconst _estiloMarcador = icone => {\n  return {\n    iconUrl: icone,\n    shadowAnchor: [20, 40],\n    shadowSize: [40, 40],\n    iconSize: [40, 40],\n    iconAnchor: [20, 40],\n    popupAnchor: [1, -25],\n    tooltipAnchor: [16, -25]\n  };\n};\n\nexport const ToolBar = () => {\n  _s();\n\n  const [desenho, setDesenho] = useState('');\n  const [ferramentas, setFerramentas] = useState({});\n  const [ferramentaAtual, setFerramentaAtual] = useState({\n    tipo: '',\n    status: 'AGUARDANDO'\n  });\n  const mapContext = React.useContext(Context);\n  const {\n    map,\n    layersEdit\n  } = mapContext;\n\n  const bindEvents = () => {\n    map.on(L.Draw.Event.CREATED, () => {\n      setFerramentaAtual({\n        status: 'AGUARDANDO'\n      });\n    });\n  };\n\n  const ferramentasDesenho = () => {\n    const POLIGONO = new L.Draw.Polygon(map, {\n      shapeOptions: ESTILO_TALHAO\n    });\n    const CIRCLEMARKER = new L.Draw.Marker(map, {\n      icon: L.icon(_estiloMarcador(iconPadrao))\n    });\n    setFerramentas({ ...{\n        POLIGONO: POLIGONO,\n        CIRCLEMARKER: CIRCLEMARKER\n      }\n    });\n  };\n\n  useEffect(() => {\n    ferramentasDesenho();\n    bindEvents();\n  }, []);\n\n  const desenhar = tipo => {\n    const ferramenta = ferramentas[tipo];\n\n    if (ferramenta) {\n      ferramenta.enable();\n      setFerramentaAtual({\n        status: 'INSERINDO'\n      });\n    }\n  };\n\n  const desenharPoligono = () => {\n    const desenho = 'POLIGONO';\n    setDesenho(desenho);\n    desenhar(desenho);\n  };\n\n  const desenharMarcadorPraga = () => {\n    const desenho = 'CIRCLEMARKER';\n    setDesenho(desenho);\n    desenhar(desenho);\n  };\n\n  const desenharMarcadorAnotacao = () => {\n    const desenho = 'CIRCLEMARKER';\n    setDesenho(desenho);\n    desenhar(desenho);\n  };\n\n  const cancelarDesenho = () => {\n    const ferramenta = ferramentas[desenho];\n    setDesenho('');\n    ferramenta.disable();\n    setFerramentaAtual({\n      status: 'AGUARDANDO'\n    });\n  };\n\n  const editarGeometria = () => {\n    layersEdit.eachLayer(layerEdit => {\n      layerEdit.editing.enable();\n    });\n    setFerramentaAtual({\n      status: 'EDITANDO'\n    });\n  };\n\n  const excluirGeometria = () => {\n    setFerramentaAtual({\n      status: 'EDITANDO'\n    });\n  };\n\n  const salvar = () => {\n    layersEdit.eachLayer(layerEdit => {\n      layerEdit.editing.disable();\n    });\n    setFerramentaAtual({\n      status: 'AGUARDANDO'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [ferramentaAtual.status === 'AGUARDANDO' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-group buttons-right\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"default\",\n          icon: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-draw-polygon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this),\n          size: 'large',\n          onClick: desenharPoligono\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-group buttons-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), ferramentaAtual.status === 'EDITANDO' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-group buttons-right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"default\",\n        icon: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 19\n        }, this),\n        size: 'large',\n        onClick: salvar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), ferramentaAtual.status === 'INSERINDO' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-group buttons-right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"default\",\n        icon: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-redo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 19\n        }, this),\n        size: 'large',\n        onClick: cancelarDesenho\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ToolBar, \"j0bkWeubyDO9Vk2GqiOS8K4k7oI=\");\n\n_c = ToolBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToolBar\");","map":{"version":3,"sources":["/home/paulo/Projetos/maps/frontend/src/pages/mapa/components/tools/ToolBar.js"],"names":["React","useEffect","useState","Button","L","Context","ESTILO_TALHAO","iconPadrao","_estiloMarcador","icone","iconUrl","shadowAnchor","shadowSize","iconSize","iconAnchor","popupAnchor","tooltipAnchor","ToolBar","desenho","setDesenho","ferramentas","setFerramentas","ferramentaAtual","setFerramentaAtual","tipo","status","mapContext","useContext","map","layersEdit","bindEvents","on","Draw","Event","CREATED","ferramentasDesenho","POLIGONO","Polygon","shapeOptions","CIRCLEMARKER","Marker","icon","desenhar","ferramenta","enable","desenharPoligono","desenharMarcadorPraga","desenharMarcadorAnotacao","cancelarDesenho","disable","editarGeometria","eachLayer","layerEdit","editing","excluirGeometria","salvar"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button } from 'antd';\nimport L from 'leaflet';\nimport { Context } from '../../Context';\nimport './toolsConfig';\nimport { ESTILO_TALHAO } from '../../Constants';\nimport iconPadrao from 'assets/markers/algae.png';\n\nconst _estiloMarcador = icone => {\n  return {\n    iconUrl: icone,\n    shadowAnchor: [20, 40],\n    shadowSize: [40, 40],\n    iconSize: [40, 40],\n    iconAnchor: [20, 40],\n    popupAnchor: [1, -25],\n    tooltipAnchor: [16, -25],\n  };\n};\n\nexport const ToolBar = () => {\n  const [desenho, setDesenho] = useState('');\n  const [ferramentas, setFerramentas] = useState({});\n  const [ferramentaAtual, setFerramentaAtual] = useState({\n    tipo: '',\n    status: 'AGUARDANDO',\n  });\n  const mapContext = React.useContext(Context);\n  const { map, layersEdit } = mapContext;\n\n  const bindEvents = () => {\n    map.on(L.Draw.Event.CREATED, () => {\n      setFerramentaAtual({ status: 'AGUARDANDO' });\n    });\n  };\n\n  const ferramentasDesenho = () => {\n    const POLIGONO = new L.Draw.Polygon(map, {\n      shapeOptions: ESTILO_TALHAO,\n    });\n    const CIRCLEMARKER = new L.Draw.Marker(map, {\n      icon: L.icon(_estiloMarcador(iconPadrao)),\n    });\n    setFerramentas({\n      ...{ POLIGONO: POLIGONO, CIRCLEMARKER: CIRCLEMARKER },\n    });\n  };\n\n  useEffect(() => {\n    ferramentasDesenho();\n    bindEvents();\n  }, []);\n\n  const desenhar = tipo => {\n    const ferramenta = ferramentas[tipo];\n\n    if (ferramenta) {\n      ferramenta.enable();\n      setFerramentaAtual({ status: 'INSERINDO' });\n    }\n  };\n\n  const desenharPoligono = () => {\n    const desenho = 'POLIGONO';\n    setDesenho(desenho);\n    desenhar(desenho);\n  };\n\n  const desenharMarcadorPraga = () => {\n    const desenho = 'CIRCLEMARKER';\n    setDesenho(desenho);\n    desenhar(desenho);\n  };\n\n  const desenharMarcadorAnotacao = () => {\n    const desenho = 'CIRCLEMARKER';\n    setDesenho(desenho);\n    desenhar(desenho);\n  };\n\n  const cancelarDesenho = () => {\n    const ferramenta = ferramentas[desenho];\n    setDesenho('');\n    ferramenta.disable();\n    setFerramentaAtual({ status: 'AGUARDANDO' });\n  };\n\n  const editarGeometria = () => {\n    layersEdit.eachLayer((layerEdit)=> {\n      layerEdit.editing.enable();\n    });\n    setFerramentaAtual({ status: 'EDITANDO' });\n  };\n\n  const excluirGeometria = () => {\n    setFerramentaAtual({ status: 'EDITANDO' });\n  };\n\n  const salvar = () => {\n    layersEdit.eachLayer((layerEdit)=> {\n      layerEdit.editing.disable();\n    });\n    setFerramentaAtual({ status: 'AGUARDANDO' });\n  };\n\n  return (\n    <>\n      {ferramentaAtual.status === 'AGUARDANDO' && (\n        <>\n          <div className=\"buttons-group buttons-right\">\n            <Button\n              type=\"default\"\n              icon={<i className=\"fas fa-draw-polygon\"></i>}\n              size={'large'}\n              onClick={desenharPoligono}\n            />\n            {/* <Button\n              type=\"default\"\n              icon={<i className=\"fas fa-pastafarianism\"></i>}\n              size={'large'}\n              onClick={desenharMarcadorPraga}\n            />\n            <Button\n              type=\"default\"\n              icon={<i className=\"fas fa-comment-alt\"></i>}\n              size={'large'}\n              onClick={desenharMarcadorAnotacao}\n            /> */}\n          </div>\n          <div className=\"buttons-group buttons-right\">\n            {/* <Button\n              type=\"default\"\n              icon={<i className=\"fa fa-pencil\"></i>}\n              size={'large'}\n              onClick={editarGeometria}\n            /> */}\n          </div>\n        </>\n      )}\n      {ferramentaAtual.status === 'EDITANDO' && (\n        <div className=\"buttons-group buttons-right\">\n          <Button\n            type=\"default\"\n            icon={<i className=\"fas fa-save\"></i>}\n            size={'large'}\n            onClick={salvar}\n          />\n        </div>\n      )}\n      {ferramentaAtual.status === 'INSERINDO' && (\n        <div className=\"buttons-group buttons-right\">\n          <Button\n            type=\"default\"\n            icon={<i className=\"fas fa-redo\"></i>}\n            size={'large'}\n            onClick={cancelarDesenho}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}